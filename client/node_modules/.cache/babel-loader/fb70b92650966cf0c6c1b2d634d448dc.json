{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\chat\\\\appreact\\\\client\\\\src\\\\components\\\\NewConversationModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Modal, Form, Button } from 'react-bootstrap';\nimport { contacts } from '../context/ContactsProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function NewConversationModal() {\n  _s();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n  };\n\n  const [selectedContactIds, setSelectedContactIds] = useState([]);\n\n  const handleCheckboxChange = contactId => {\n    selectedContactIds(prevSelectedContactIds => {\n      if (prevSelectedContactIds.includes(contactId)) {\n        return prevSelectedContactIds.filter(prevId => {\n          return contactId === prevId;\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: \"Create Conversation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [contacts.map(contact => {\n          /*#__PURE__*/\n          _jsxDEV(Form.Group, {\n            controlId: contact.id,\n            children: /*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"checkbox\",\n              value: selectedContactIds.includes(contact.id),\n              label: contact.name,\n              onChange: () => handleCheckboxChange(contact.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this)\n          }, contact.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(NewConversationModal, \"ebBIDk1ZbeBsGniEDXoWyFdvubM=\");\n\n_c = NewConversationModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewConversationModal\");","map":{"version":3,"names":["React","useState","Modal","Form","Button","contacts","NewConversationModal","handleSubmit","e","preventDefault","selectedContactIds","setSelectedContactIds","handleCheckboxChange","contactId","prevSelectedContactIds","includes","filter","prevId","map","contact","id","name"],"sources":["C:/xampp/htdocs/chat/appreact/client/src/components/NewConversationModal.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { Modal, Form, Button } from 'react-bootstrap'\r\nimport { contacts } from '../context/ContactsProvider'\r\n\r\nexport default function NewConversationModal() {\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n  }\r\n\r\n  const [selectedContactIds, setSelectedContactIds] = useState([])\r\n\r\n  const handleCheckboxChange = contactId => {\r\n    selectedContactIds(prevSelectedContactIds => {\r\n      if (prevSelectedContactIds.includes(contactId)) {\r\n        return prevSelectedContactIds.filter(\r\n          prevId => {\r\n            return contactId === prevId\r\n          }\r\n        )\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal.Header closeButton>Create Conversation</Modal.Header>\r\n      <Modal.Body>\r\n        <Form onSubmit={handleSubmit}>\r\n          {contacts.map(contact => {\r\n            <Form.Group controlId={contact.id} key={contact.id}>\r\n              <Form.Check\r\n                type=\"checkbox\"\r\n                value={selectedContactIds.includes(contact.id)}\r\n                label={contact.name}\r\n                onChange={() => handleCheckboxChange(contact.id)}\r\n              />\r\n            </Form.Group>\r\n          })}\r\n          <Button type='submit'>Create</Button>\r\n        </Form>\r\n      </Modal.Body>\r\n    </>\r\n  )\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,MAAtB,QAAoC,iBAApC;AACA,SAASC,QAAT,QAAyB,6BAAzB;;;AAEA,eAAe,SAASC,oBAAT,GAAgC;EAAA;;EAE7C,MAAMC,YAAY,GAAGC,CAAC,IAAI;IACxBA,CAAC,CAACC,cAAF;EACD,CAFD;;EAIA,MAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CV,QAAQ,CAAC,EAAD,CAA5D;;EAEA,MAAMW,oBAAoB,GAAGC,SAAS,IAAI;IACxCH,kBAAkB,CAACI,sBAAsB,IAAI;MAC3C,IAAIA,sBAAsB,CAACC,QAAvB,CAAgCF,SAAhC,CAAJ,EAAgD;QAC9C,OAAOC,sBAAsB,CAACE,MAAvB,CACLC,MAAM,IAAI;UACR,OAAOJ,SAAS,KAAKI,MAArB;QACD,CAHI,CAAP;MAKD;IACF,CARiB,CAAlB;EASD,CAVD;;EAYA,oBACE;IAAA,wBACE,QAAC,KAAD,CAAO,MAAP;MAAc,WAAW,MAAzB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,KAAD,CAAO,IAAP;MAAA,uBACE,QAAC,IAAD;QAAM,QAAQ,EAAEV,YAAhB;QAAA,WACGF,QAAQ,CAACa,GAAT,CAAaC,OAAO,IAAI;UACvB;UAAA,QAAC,IAAD,CAAM,KAAN;YAAY,SAAS,EAAEA,OAAO,CAACC,EAA/B;YAAA,uBACE,QAAC,IAAD,CAAM,KAAN;cACE,IAAI,EAAC,UADP;cAEE,KAAK,EAAEV,kBAAkB,CAACK,QAAnB,CAA4BI,OAAO,CAACC,EAApC,CAFT;cAGE,KAAK,EAAED,OAAO,CAACE,IAHjB;cAIE,QAAQ,EAAE,MAAMT,oBAAoB,CAACO,OAAO,CAACC,EAAT;YAJtC;cAAA;cAAA;cAAA;YAAA;UADF,GAAwCD,OAAO,CAACC,EAAhD;YAAA;YAAA;YAAA;UAAA;QAQD,CATA,CADH,eAWE,QAAC,MAAD;UAAQ,IAAI,EAAC,QAAb;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAXF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA,gBADF;AAoBD;;GAxCuBd,oB;;KAAAA,oB"},"metadata":{},"sourceType":"module"}