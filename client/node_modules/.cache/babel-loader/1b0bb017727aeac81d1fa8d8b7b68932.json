{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\chat\\\\appreact\\\\client\\\\src\\\\context\\\\ConversationsProvider.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport useLocalStorage from '../hooks/useLocalStorage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConversationsContext = /*#__PURE__*/React.createContext();\nexport function useConversations() {\n  _s();\n\n  return useContext(ConversationsContext);\n}\n\n_s(useConversations, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function ConversationsProvider(_ref) {\n  _s2();\n\n  let {\n    children\n  } = _ref;\n  const [conversations, setConversations] = useLocalStorage('conversations', []);\n\n  const createConversation = receipients => {\n    setConversations(prevConversations => {\n      return [...prevConversations, {\n        receipients,\n        messages: []\n      }];\n    });\n  };\n\n  const formattedConversations = conversations.map(conversation => {\n    const receipients = conversation.recipients.map(recipient => {\n      const contact = contacts.find(contact => {\n        return contact.id === recipient;\n      });\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(ConversationsContext.Provider, {\n    value: {\n      conversations,\n      createConversation\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(ConversationsProvider, \"9L8V6GHkDskoUaMzXQxf9MBUh4s=\", false, function () {\n  return [useLocalStorage];\n});\n\n_c = ConversationsProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConversationsProvider\");","map":{"version":3,"names":["React","useContext","useLocalStorage","ConversationsContext","createContext","useConversations","ConversationsProvider","children","conversations","setConversations","createConversation","receipients","prevConversations","messages","formattedConversations","map","conversation","recipients","recipient","contact","contacts","find","id"],"sources":["C:/xampp/htdocs/chat/appreact/client/src/context/ConversationsProvider.js"],"sourcesContent":["import React, { useContext } from 'react'\r\nimport useLocalStorage from '../hooks/useLocalStorage'\r\n\r\nconst ConversationsContext = React.createContext()\r\n\r\nexport function useConversations() {\r\n    return useContext(ConversationsContext)\r\n}\r\n\r\nexport function ConversationsProvider({ children }) {\r\n    const [conversations, setConversations] = useLocalStorage('conversations', [])\r\n\r\n    const createConversation = (receipients) => {\r\n        setConversations(prevConversations => {\r\n            return [...prevConversations, { receipients, messages: [] }];\r\n        })\r\n    }\r\n\r\n    const formattedConversations = conversations.map((conversation) =>{\r\n        const receipients = conversation.recipients.map((recipient) =>{\r\n            const contact = contacts.find(contact => {\r\n                return contact.id === recipient\r\n            })\r\n        })\r\n    })\r\n\r\n    return ( \r\n    <ConversationsContext.Provider value = { { conversations, createConversation }}>\r\n        { children } \r\n    </ConversationsContext.Provider>\r\n    )\r\n}"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,eAAP,MAA4B,0BAA5B;;AAEA,MAAMC,oBAAoB,gBAAGH,KAAK,CAACI,aAAN,EAA7B;AAEA,OAAO,SAASC,gBAAT,GAA4B;EAAA;;EAC/B,OAAOJ,UAAU,CAACE,oBAAD,CAAjB;AACH;;GAFeE,gB;;AAIhB,OAAO,SAASC,qBAAT,OAA6C;EAAA;;EAAA,IAAd;IAAEC;EAAF,CAAc;EAChD,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCP,eAAe,CAAC,eAAD,EAAkB,EAAlB,CAAzD;;EAEA,MAAMQ,kBAAkB,GAAIC,WAAD,IAAiB;IACxCF,gBAAgB,CAACG,iBAAiB,IAAI;MAClC,OAAO,CAAC,GAAGA,iBAAJ,EAAuB;QAAED,WAAF;QAAeE,QAAQ,EAAE;MAAzB,CAAvB,CAAP;IACH,CAFe,CAAhB;EAGH,CAJD;;EAMA,MAAMC,sBAAsB,GAAGN,aAAa,CAACO,GAAd,CAAmBC,YAAD,IAAiB;IAC9D,MAAML,WAAW,GAAGK,YAAY,CAACC,UAAb,CAAwBF,GAAxB,CAA6BG,SAAD,IAAc;MAC1D,MAAMC,OAAO,GAAGC,QAAQ,CAACC,IAAT,CAAcF,OAAO,IAAI;QACrC,OAAOA,OAAO,CAACG,EAAR,KAAeJ,SAAtB;MACH,CAFe,CAAhB;IAGH,CAJmB,CAApB;EAKH,CAN8B,CAA/B;EAQA,oBACA,QAAC,oBAAD,CAAsB,QAAtB;IAA+B,KAAK,EAAK;MAAEV,aAAF;MAAiBE;IAAjB,CAAzC;IAAA,UACMH;EADN;IAAA;IAAA;IAAA;EAAA,QADA;AAKH;;IAtBeD,qB;UAC8BJ,e;;;KAD9BI,qB"},"metadata":{},"sourceType":"module"}