{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\chat\\\\appreact\\\\client\\\\src\\\\context\\\\ConversationsProvider.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport useLocalStorage from '../hooks/useLocalStorage';\nimport { useContacts } from './ContactsProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConversationsContext = /*#__PURE__*/React.createContext();\nexport function useConversations() {\n  _s();\n\n  return useContext(ConversationsContext);\n}\n\n_s(useConversations, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function ConversationsProvider(_ref) {\n  _s2();\n\n  let {\n    id,\n    children\n  } = _ref;\n  const [conversations, setConversations] = useLocalStorage('conversations', []);\n  const [selectedConversationIndex, setSelectedConversationIndex] = useState(0);\n  const {\n    contacts\n  } = useContacts();\n\n  const createConversation = recipients => {\n    setConversations(prevConversations => {\n      return [...prevConversations, {\n        recipients,\n        messages: []\n      }];\n    });\n  };\n\n  const addMessageToConversation = _ref2 => {\n    let {\n      recipients,\n      text,\n      sender\n    } = _ref2;\n  };\n\n  const sendMessage = (recipients, text) => {\n    addMessageToConversation({\n      recipients,\n      text,\n      sender: id\n    });\n  };\n\n  const formattedConversations = conversations.map((conversation, index) => {\n    const recipients = conversation.recipients.map(recipient => {\n      const contact = contacts.find(contact => {\n        return contact.id === recipient;\n      });\n      const name = contact && contact.name || recipient;\n      return {\n        id: recipient,\n        name\n      };\n    });\n    const selected = index === selectedConversationIndex;\n    return { ...conversation,\n      recipients,\n      selected\n    };\n  });\n  const value = {\n    conversations: formattedConversations,\n    selectedConversation: formattedConversations[selectedConversationIndex],\n    selectConversationIndex: setSelectedConversationIndex,\n    createConversation\n  };\n  return /*#__PURE__*/_jsxDEV(ConversationsContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(ConversationsProvider, \"ADtPWNMnGiyYAnxDUYXjSDYb8Ow=\", false, function () {\n  return [useLocalStorage, useContacts];\n});\n\n_c = ConversationsProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConversationsProvider\");","map":{"version":3,"names":["React","useContext","useState","useLocalStorage","useContacts","ConversationsContext","createContext","useConversations","ConversationsProvider","id","children","conversations","setConversations","selectedConversationIndex","setSelectedConversationIndex","contacts","createConversation","recipients","prevConversations","messages","addMessageToConversation","text","sender","sendMessage","formattedConversations","map","conversation","index","recipient","contact","find","name","selected","value","selectedConversation","selectConversationIndex"],"sources":["C:/xampp/htdocs/chat/appreact/client/src/context/ConversationsProvider.js"],"sourcesContent":["import React, { useContext, useState } from 'react'\r\nimport useLocalStorage from '../hooks/useLocalStorage'\r\nimport { useContacts } from './ContactsProvider'\r\n\r\nconst ConversationsContext = React.createContext()\r\n\r\nexport function useConversations() {\r\n    return useContext(ConversationsContext)\r\n}\r\n\r\nexport function ConversationsProvider({ id, children }) {\r\n    const [conversations, setConversations] = useLocalStorage('conversations', [])\r\n    const [selectedConversationIndex, setSelectedConversationIndex] = useState(0)\r\n\r\n    const { contacts } = useContacts()\r\n\r\n    const createConversation = (recipients) => {\r\n        setConversations(prevConversations => {\r\n            return [...prevConversations, { recipients, messages: [] }];\r\n        })\r\n    }\r\n\r\n    const addMessageToConversation = ({ recipients, text, sender }) => {}\r\n\r\n    const sendMessage = (recipients, text) =>{\r\n        addMessageToConversation({ recipients, text, sender: id})\r\n    }\r\n\r\n    const formattedConversations = conversations.map((conversation, index) => {\r\n        const recipients = conversation.recipients.map(recipient =>{\r\n            const contact = contacts.find(contact => {\r\n                return contact.id === recipient\r\n            })\r\n\r\n            const name = (contact && contact.name) || recipient\r\n            return { id: recipient, name}\r\n        })\r\n\r\n        const selected = index === selectedConversationIndex\r\n        return { ...conversation, recipients, selected}\r\n    })\r\n\r\n    const value = {\r\n        conversations: formattedConversations,\r\n        selectedConversation: formattedConversations[selectedConversationIndex],\r\n        selectConversationIndex: setSelectedConversationIndex,\r\n        createConversation\r\n    }\r\n\r\n    return ( \r\n    <ConversationsContext.Provider value = { value }>\r\n        { children } \r\n    </ConversationsContext.Provider>\r\n    )\r\n}"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AACA,SAASC,WAAT,QAA4B,oBAA5B;;AAEA,MAAMC,oBAAoB,gBAAGL,KAAK,CAACM,aAAN,EAA7B;AAEA,OAAO,SAASC,gBAAT,GAA4B;EAAA;;EAC/B,OAAON,UAAU,CAACI,oBAAD,CAAjB;AACH;;GAFeE,gB;;AAIhB,OAAO,SAASC,qBAAT,OAAiD;EAAA;;EAAA,IAAlB;IAAEC,EAAF;IAAMC;EAAN,CAAkB;EACpD,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCT,eAAe,CAAC,eAAD,EAAkB,EAAlB,CAAzD;EACA,MAAM,CAACU,yBAAD,EAA4BC,4BAA5B,IAA4DZ,QAAQ,CAAC,CAAD,CAA1E;EAEA,MAAM;IAAEa;EAAF,IAAeX,WAAW,EAAhC;;EAEA,MAAMY,kBAAkB,GAAIC,UAAD,IAAgB;IACvCL,gBAAgB,CAACM,iBAAiB,IAAI;MAClC,OAAO,CAAC,GAAGA,iBAAJ,EAAuB;QAAED,UAAF;QAAcE,QAAQ,EAAE;MAAxB,CAAvB,CAAP;IACH,CAFe,CAAhB;EAGH,CAJD;;EAMA,MAAMC,wBAAwB,GAAG,SAAkC;IAAA,IAAjC;MAAEH,UAAF;MAAcI,IAAd;MAAoBC;IAApB,CAAiC;EAAE,CAArE;;EAEA,MAAMC,WAAW,GAAG,CAACN,UAAD,EAAaI,IAAb,KAAqB;IACrCD,wBAAwB,CAAC;MAAEH,UAAF;MAAcI,IAAd;MAAoBC,MAAM,EAAEb;IAA5B,CAAD,CAAxB;EACH,CAFD;;EAIA,MAAMe,sBAAsB,GAAGb,aAAa,CAACc,GAAd,CAAkB,CAACC,YAAD,EAAeC,KAAf,KAAyB;IACtE,MAAMV,UAAU,GAAGS,YAAY,CAACT,UAAb,CAAwBQ,GAAxB,CAA4BG,SAAS,IAAG;MACvD,MAAMC,OAAO,GAAGd,QAAQ,CAACe,IAAT,CAAcD,OAAO,IAAI;QACrC,OAAOA,OAAO,CAACpB,EAAR,KAAemB,SAAtB;MACH,CAFe,CAAhB;MAIA,MAAMG,IAAI,GAAIF,OAAO,IAAIA,OAAO,CAACE,IAApB,IAA6BH,SAA1C;MACA,OAAO;QAAEnB,EAAE,EAAEmB,SAAN;QAAiBG;MAAjB,CAAP;IACH,CAPkB,CAAnB;IASA,MAAMC,QAAQ,GAAGL,KAAK,KAAKd,yBAA3B;IACA,OAAO,EAAE,GAAGa,YAAL;MAAmBT,UAAnB;MAA+Be;IAA/B,CAAP;EACH,CAZ8B,CAA/B;EAcA,MAAMC,KAAK,GAAG;IACVtB,aAAa,EAAEa,sBADL;IAEVU,oBAAoB,EAAEV,sBAAsB,CAACX,yBAAD,CAFlC;IAGVsB,uBAAuB,EAAErB,4BAHf;IAIVE;EAJU,CAAd;EAOA,oBACA,QAAC,oBAAD,CAAsB,QAAtB;IAA+B,KAAK,EAAKiB,KAAzC;IAAA,UACMvB;EADN;IAAA;IAAA;IAAA;EAAA,QADA;AAKH;;IA5CeF,qB;UAC8BL,e,EAGrBC,W;;;KAJTI,qB"},"metadata":{},"sourceType":"module"}